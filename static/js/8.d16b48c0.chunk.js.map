{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/errorMessage/error.gif","components/errorMessage/errorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["setContent","process","Component","newItemLoading","Spinner","Error","ComicsList","useState","comicsList","setComicsList","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","className","arr","items","map","item","i","CSSTransition","timeout","classNames","tabIndex","to","id","src","thumbnail","alt","title","price","TransitionGroup","component","renderItems","disabled","style","onClick","ComicsPage","Helmet","name","content","AppBanner","ErrorBoundary","ErrorMessage","display","width","height","objectFit","margin","img","request","useCallback","url","a","method","body","headers","fetch","responce","ok","status","json","data","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","res","results","_tranformCharacter","getCharacter","getCharacterByName","_tranformComics","getComic","char","description","slice","path","extension","homepage","urls","wiki","comics","pageCount","language","textObjects","prices","state","error","err","errInfo","console","log","this","setState","props","children","avengers","avengersLogo"],"mappings":"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","file":"static/js/8.d16b48c0.chunk.js","sourcesContent":["import './comicsList.scss';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../spinner/Spinner';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner/>;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>;\n        case 'confirmed':\n            return <Component/>;\n        case 'error':\n            return <ErrorMessage/>;\n        default:\n            throw new Error('Unexpected process state');\n    }\n}\n\nconst ComicsList = () => {\n\n    const [ comicsList, setComicsList ] = useState([]);\n    const [ newItemLoading, setNewItemLoading ] = useState(false);\n    const [ offset, setOffset ] = useState(0);\n    const [ comicsEnded, setComicsEnded] = useState(false);\n    \n    const { getAllComics, process, setProcess } = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\n        getAllComics(offset)\n        .then(onComicsListLoaded)\n        .then(() => setProcess('confirmed'));\n    }\n\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8){\n            ended = true;\n        }\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(comicsEnded => ended);\n    }\n\n\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            \n            return (\n                <CSSTransition key={i} timeout={500} classNames=\"comics__item\">\n                    <li \n                    className=\"comics__item\"\n                    tabIndex={0}\n                    >\n                        <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} className=\"comics__item-img\" alt={item.title}/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                        </Link>\n                    </li>\n                </CSSTransition>\n                \n            )\n        });\n        \n        return (\n            <ul className=\"comics__grid\">\n                <TransitionGroup component={null}>\n                        {items}\n                </TransitionGroup>\n            </ul>\n        )\n    }\n\n        return (\n            <div className=\"comics__list\">\n                {setContent(process, () => renderItems(comicsList), newItemLoading)}\n                <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n}\n\n\nexport default ComicsList;","import AppBanner from '../appBanner/AppBanner'\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary'\r\nimport { Helmet } from \"react-helmet\"\r\n\r\nconst ComicsPage = () => {\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                name=\"description\"\r\n                content=\"Page with list of our comics\"\r\n                />\r\n                <title>Marvel comics Page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ErrorBoundary>\r\n                <ComicsList/>\r\n            </ErrorBoundary>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}} src={img} alt='Error' /> \r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {useHttp} from '../hooks/http.hook'\r\n\r\nconst useMarvelService = () => {\r\n    const { request, clearError, process, setProcess} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n    const _apiKey = 'apikey=156faa42555b87218bb091383c72c42d'\r\n    const _baseOffset = 210;\r\n    \r\n\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_tranformCharacter)\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _tranformCharacter(res.data.results[0])\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_tranformCharacter);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_tranformComics);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _tranformComics(res.data.results[0])\r\n    }\r\n\r\n    const _tranformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? char.description.slice(0, 200) + '...' : 'No data',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _tranformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || 'There is no description',\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            language: comics.textObjects.language || 'en-us',\r\n            price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\r\n        }\r\n    }\r\n\r\n    return { getAllCharacters, getCharacter, clearError, getAllComics, getComic, getCharacterByName, process, setProcess}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from 'react' \r\n\r\nexport const useHttp = () => {\r\n    const [ process, setProcess ] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type':'application/json'}) => {\r\n\r\n        setProcess('loading');\r\n        try {\r\n            const responce = await fetch(url, {method, body, headers});\r\n            if(!responce.ok) {\r\n                throw new Error(`Could not fetch ${url}, status ${responce.status}.`);\r\n            }\r\n            const data = await responce.json()\r\n            return data;\r\n\r\n        } catch(e){\r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => {\r\n        setProcess('loading');\r\n    }, [])\r\n\r\n        return {request, clearError, process, setProcess}\r\n}","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(err, errInfo) {\r\n        console.log(err, errInfo)\r\n        this.setState({\r\n            error:true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return (\r\n                <ErrorMessage/>\r\n            )\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;"],"sourceRoot":""}